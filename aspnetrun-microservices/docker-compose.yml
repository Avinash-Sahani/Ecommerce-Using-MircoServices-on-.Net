version: "3.9"
services:
  catalogdb:
    image: mongo
    container_name: catalogdb
    restart: always
    ports:
      - "27017:27017"
    command: ["mongod", "--port", "27017"]
    volumes:
      - mongo_data:/data/db
    
  
  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: /src/Services/Catalog/Catalog.API/Dockerfile
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
    ports:
      - "8000:80"
    depends_on:
      - catalogdb
  
 
  
  
    
  basketdb:
    image: redis
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"
  
  
  basket.api:
    build:
      context: .
      dockerfile: /src/Services/Basket/Basket.API/Dockerfile
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "Redis:CacheUrl=basketdb:6379,abortConnect=false"
    ports:
      - "8001:80"
    depends_on:
      - basketdb
    
  discountdb:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: admin1234
      POSTGRES_USER : admin
      POSTGRES_DB: DiscountDb
    volumes:
      - postgres_data:/var/lib/postgresql/data  
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@aspnetrun.com
      PGADMIN_DEFAULT_PASSWORD: admin1234
    restart:  always
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
  
  portainer:
    image: portainer/portainer-ce
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data  
  
  
volumes:
  mongo_data:
  portainer_data:
  postgres_data:  
  pgadmin_data:
